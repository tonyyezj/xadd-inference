%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Microsoft Windows XP.
%%Title: Z:\Thesis\images\fig35_FinalRates.eps
%%CreationDate: 09/30/2012  10:47:44
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    72   238   538   554
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    72   238   538   554
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0864 6648 csm

    0     0  5598  3789 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5599 3790 rf
6 w
0 3088 4338 0 0 -3088 728 3372 4 MP
PP
-4338 0 0 3088 4338 0 0 -3088 728 3372 5 MP stroke
4 w
DO
SO
6 w
0 sg
 728  284 mt 5066  284 L
 728 3372 mt 5066 3372 L
5066 3372 mt 5066  284 L
 728 3372 mt  728  284 L
 728 3372 mt 5066 3372 L
 728 3372 mt  728  284 L
 728 3372 mt  728 3328 L
 728  284 mt  728  327 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 695 3517 mt 
(1) s
1161 3372 mt 1161 3328 L
1161  284 mt 1161  327 L
1045 3517 mt 
(1.05) s
1595 3372 mt 1595 3328 L
1595  284 mt 1595  327 L
1512 3517 mt 
(1.1) s
2029 3372 mt 2029 3328 L
2029  284 mt 2029  327 L
1913 3517 mt 
(1.15) s
2463 3372 mt 2463 3328 L
2463  284 mt 2463  327 L
2380 3517 mt 
(1.2) s
2897 3372 mt 2897 3328 L
2897  284 mt 2897  327 L
2781 3517 mt 
(1.25) s
3330 3372 mt 3330 3328 L
3330  284 mt 3330  327 L
3247 3517 mt 
(1.3) s
3764 3372 mt 3764 3328 L
3764  284 mt 3764  327 L
3648 3517 mt 
(1.35) s
4198 3372 mt 4198 3328 L
4198  284 mt 4198  327 L
4115 3517 mt 
(1.4) s
4632 3372 mt 4632 3328 L
4632  284 mt 4632  327 L
4516 3517 mt 
(1.45) s
5066 3372 mt 5066 3328 L
5066  284 mt 5066  327 L
4983 3517 mt 
(1.5) s
 728 3372 mt  771 3372 L
5066 3372 mt 5022 3372 L
 627 3416 mt 
(1) s
 728 3028 mt  771 3028 L
5066 3028 mt 5022 3028 L
 527 3072 mt 
(1.5) s
 728 2685 mt  771 2685 L
5066 2685 mt 5022 2685 L
 627 2729 mt 
(2) s
 728 2342 mt  771 2342 L
5066 2342 mt 5022 2342 L
 527 2386 mt 
(2.5) s
 728 1999 mt  771 1999 L
5066 1999 mt 5022 1999 L
 627 2043 mt 
(3) s
 728 1656 mt  771 1656 L
5066 1656 mt 5022 1656 L
 527 1700 mt 
(3.5) s
 728 1313 mt  771 1313 L
5066 1313 mt 5022 1313 L
 627 1357 mt 
(4) s
 728  970 mt  771  970 L
5066  970 mt 5022  970 L
 527 1014 mt 
(4.5) s
 728  627 mt  771  627 L
5066  627 mt 5022  627 L
 627  671 mt 
(5) s
 728  284 mt  771  284 L
5066  284 mt 5022  284 L
 527  328 mt 
(5.5) s
 728  284 mt 5066  284 L
 728 3372 mt 5066 3372 L
5066 3372 mt 5066  284 L
 728 3372 mt  728  284 L
gs 728 284 4339 3089 rc
DD
12 w
620 -315 3718 -1315 728 3372 3 MP stroke
SO
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
620 -482 3718 -1362 728 3372 3 MP stroke
DA
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
620 -616 3718 -2172 728 3372 3 MP stroke
gr

12 w
c9
DA
0 sg
2038 3660 mt 
(Increasing Rate of Problem Size) s
 445 2703 mt  -90 rotate
(Increasing Rate of Running Time) s
90 rotate
 711 3415 mt 
( ) s
5050  326 mt 
( ) s
SO
6 w
1 sg
0 618 2647 0 0 -618 869 1009 4 MP
PP
-2647 0 0 618 2647 0 0 -618 869 1009 5 MP stroke
4 w
DO
SO
6 w
0 sg
 869  391 mt 3516  391 L
 869 1009 mt 3516 1009 L
3516 1009 mt 3516  391 L
 869 1009 mt  869  391 L
 869 1009 mt 3516 1009 L
 869 1009 mt  869  391 L
 869  391 mt 3516  391 L
 869 1009 mt 3516 1009 L
3516 1009 mt 3516  391 L
 869 1009 mt  869  391 L
1347  575 mt 
(Increasing Rate by N) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

2465  515 mt 
(3) s
gs 869 391 2648 619 rc
DD
12 w
368 0 942 514 2 MP stroke
SO
gr

12 w
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1347  743 mt 
(Increasing Rate of Running Time of BnB) s
gs 869 391 2648 619 rc
c8
368 0 942 700 2 MP stroke
gr

c8
0 sg
1347  948 mt 
(Increasing Rate by N) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

2465  888 mt 
(4) s
gs 869 391 2648 619 rc
DA
c9
368 0 942 886 2 MP stroke
SO
6 w
gr

6 w
c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
